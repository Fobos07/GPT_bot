from cfg import bot_token, pay_token_test, hello_mssg, info_text
from telebot import TeleBot

from user import NewUser, ClearHistory, AddRole
from keyboards import end_inl_chat, choose_tokens, choose_role
from prices import PRICE_150k, PRICE_250k, PRICE_50k
from db import user_info, update_user_status, check_user_role, last_use
from gpt_response import GptResponse

bot = TeleBot(bot_token)

@bot.message_handler(commands=['start'])
def start(message):
    NewUser(message.from_user.id, message.from_user.first_name, message.from_user.username)
    bot.send_message(message.from_user.id, hello_mssg, reply_markup=None, parse_mode='HTML')

@bot.message_handler(commands=['profile'])
def profile(message):
    bot.send_message(message.from_user.id, user_info(message.from_user.id), reply_markup=None)

@bot.message_handler(commands=['buy'])
def buy(message):
    bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –∫–æ–ª-–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏', reply_markup=choose_tokens)

@bot.message_handler(commands=['settings'])
def settings(message):
    bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –æ—Ç —á—å–µ–≥–æ –ª–∏—Ü–∞ ChatGPT –±—É–¥–µ—Ç —Å —Ç–æ–±–æ–π –æ–±—â–∞—Ç—å—Å—è', reply_markup=choose_role)

@bot.message_handler(commands=['info'])
def settings(message):
    bot.send_message(message.from_user.id, info_text, parse_mode='HTML')


@bot.message_handler(content_types=['text'])
def main(message):
    last_use(message.from_user.id)
    if check_user_role(message.from_user.id) != '–†–æ–ª—å –Ω–µ —É—Ç—Å–∞–Ω–æ–≤–ª–µ–Ω–∞':
        bot.send_message(message.from_user.id, f'<b>{check_user_role(message.from_user.id)}</b> –¥—É–º–∞–µ—Ç, –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—åü§î', parse_mode="HTML")
        bot.edit_message_text(GptResponse(message.from_user.id, message.text).main(), message.from_user.id, message.message_id+1, reply_markup=end_inl_chat)
    else:
        bot.send_message(message.from_user.id, f'<b>ChatGPT</b> –¥—É–º–∞–µ—Ç, –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—åü§î', parse_mode="HTML")
        bot.edit_message_text(GptResponse(message.from_user.id, message.text).main(), message.from_user.id, message.message_id+1, reply_markup=end_inl_chat)


@bot.pre_checkout_query_handler(func=lambda query: True)
def checkout(pre_checkout_query):
    bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True,
                                error_message="try to pay again in a few minutes, we need a small rest.")
    

@bot.message_handler(content_types=['successful_payment'])
def main_payment(message):
    print(message)
    if int(message.successful_payment.total_amount) == 10000:
        update_user_status(message.from_user.id, 'üíé', 50000, int(message.successful_payment.total_amount), message.successful_payment.telegram_payment_charge_id)
        bot.send_message(message.from_user.id, '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ù–∞—á–∏—Å–ª–µ–Ω–Ω–æ 50.000üíé')
    elif int(message.successful_payment.total_amount) == 30000:
        update_user_status(message.from_user.id, 'üíéüíé', 150000, int(message.successful_payment.total_amount), message.successful_payment.telegram_payment_charge_id)
        bot.send_message(message.from_user.id, '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ù–∞—á–∏—Å–ª–µ–Ω–Ω–æ 150.000üíéüíé')
    elif int(message.successful_payment.total_amount) == 55000:
        update_user_status(message.from_user.id, 'üíéüíéüíé', 250000, int(message.successful_payment.total_amount), message.successful_payment.telegram_payment_charge_id)
        bot.send_message(message.from_user.id, '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ù–∞—á–∏—Å–ª–µ–Ω–Ω–æ 250.000üíéüíéüíé')

@bot.callback_query_handler(func=lambda call: call.data)
def main_call(call):
    if call.data == 'Clear story':
        ClearHistory(call.from_user.id)
        bot.send_message(call.from_user.id, '–ß–∞—Ç —Å–±—Ä–æ—à–µ–Ω', reply_markup=None)

    if call.data == '50k':
        bot.send_invoice(call.from_user.id, '–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã', '–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤–∞–º –Ω–∞ —Å—á–µ—Ç –Ω–∞—á–∏—Å–ª–∏—Ç—Å—è –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —Ç–æ–∫–µ–Ω–æ–≤', 'test-invoice-payload', provider_token=pay_token_test, prices=PRICE_50k, currency='rub')
    elif call.data == '150k':
        bot.send_invoice(call.from_user.id, '–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã', '–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤–∞–º –Ω–∞ —Å—á–µ—Ç –Ω–∞—á–∏—Å–ª–∏—Ç—Å—è –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —Ç–æ–∫–µ–Ω–æ–≤', 'test-invoice-payload', provider_token=pay_token_test, prices=PRICE_150k, currency='rub')
    elif call.data == '250k':
        bot.send_invoice(call.from_user.id, '–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã', '–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤–∞–º –Ω–∞ —Å—á–µ—Ç –Ω–∞—á–∏—Å–ª–∏—Ç—Å—è –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —Ç–æ–∫–µ–Ω–æ–≤', 'test-invoice-payload', provider_token=pay_token_test, prices=PRICE_250k, currency='rub')

    if call.data == '–≠–π–Ω—à—Ç–µ–π–Ω':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–î–∞–º–±–ª–¥–æ—Ä':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–®–µ—Ä–ª–æ–∫ –•–æ–ª–º—Å':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–ü—É—à–∫–∏–Ω':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–ü–æ–≤–∞—Ä':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–î—É—à–Ω–∏–ª–∞':
        ClearHistory(call.from_user.id) 
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–°–µ–∫—Å–æ–ª–æ–≥':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–õ–∏–Ω–≥–≤–∏—Å—Ç':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–ü—Å–∏—Ö–æ–ª–æ–≥':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–ë–∏–∑–Ω–µ—Å–º–µ–Ω':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–≠–∫–æ–Ω–æ–º–∏—Å—Ç':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {call.data}! –ú–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å–µ–π—á–∞—Å:)')
    elif call.data == '–†–æ–ª—å –Ω–µ —É—Ç—Å–∞–Ω–æ–≤–ª–µ–Ω–∞':
        ClearHistory(call.from_user.id)
        AddRole(call.from_user.id, call.data).add_role()
        bot.delete_message(call.from_user.id, call.message.id)
        bot.send_message(call.from_user.id, f'–†–æ–ª—å —Å–±—Ä–æ—à–µ–Ω–∞. –¢—ã —Å–Ω–æ–≤–∞ –æ–±—â–∞–µ—à—å—Å—è —Å GTP!')

bot.polling(skip_pending=False, none_stop=True)
        
